apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    k8s-app: kube-controller-manager
spec:
  priorityClassName: system-node-critical
  containers:
  - name: kube-controller-manager
    image: "{{hyperkube}}"
    command:
    - /hyperkube
    - controller-manager
    - --master=http://127.0.0.1:8080
    - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --root-ca-file=/etc/kubernetes/ssl/ca.pem
    - --leader-elect=true
{% if terminated_pod_gc_threshold is defined %}
    - --terminated-pod-gc-threshold={{terminated_pod_gc_threshold}}
{% endif %}
{% if kube_enable_cloud_provider %}
    - --cloud-config={{kube_cloud_config_path}}
    - --cloud-provider={{kube_cloud_provider}}
{% endif %}
    resources:
      requests:
        cpu: {{kube_controller_manager_requests_cpu}}
        memory: {{kube_controller_manager_requests_memory}}
      limits:
        cpu: {{kube_controller_manager_limits_cpu}}
        memory: {{kube_controller_manager_limits_memory}}
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
      initialDelaySeconds: 15
      timeoutSeconds: 1
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
{% if kube_enable_cloud_provider %}
    - mountPath: {{kube_cloud_config_path}}
      name: cloud-config
      readOnly: true
{% endif %}
  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
{% if kube_enable_cloud_provider %}
  - hostPath:
      path: {{kube_cloud_config_path}}
      type: File
    name: cloud-config
{% endif %}
